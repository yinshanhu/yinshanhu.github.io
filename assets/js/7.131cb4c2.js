(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{318:function(t,a,s){t.exports=s.p+"assets/img/algo-sort-bubble-01.57b43294.gif"},347:function(t,a,s){"use strict";s.r(a);var n=[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"算法之冒泡排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算法之冒泡排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 算法之冒泡排序")]),t._v(" "),n("blockquote",[n("p",[t._v("2019.03.11")])]),t._v(" "),n("blockquote",[n("p",[t._v("冒泡排序是编程中最简单的一种算法了，也是一种入门级的算法。冒泡排序的算法时间平均复杂度为O(n²)。空间复杂度为 O(1)。冒泡排序为稳定排序。")])]),t._v(" "),n("h3",{attrs:{id:"执行过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 执行过程")]),t._v(" "),n("p",[n("img",{attrs:{src:s(318),alt:"bubble"}})]),t._v(" "),n("p",[n("strong",[t._v("步骤：")])]),t._v(" "),n("p",[t._v("①程序进行n-1趟比较（设有n个数）。")]),t._v(" "),n("p",[t._v("②每趟两两比较，若前者大于后者，则相互交换位置，那么该趟执行结束，最大数置于该趟的最后一位，在下一趟该趟的最后一位数不参与比较。")]),t._v(" "),n("p",[t._v("③如此n趟执行结束，便得从小到大排序。")]),t._v(" "),n("p",[n("em",[t._v("若是从大到小排序，在第②步中，若前者小于后者，则交换位置即可")])]),t._v(" "),n("h3",{attrs:{id:"javascript代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript代码实现","aria-hidden":"true"}},[t._v("#")]),t._v(" javascript代码实现")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bubbleSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                \n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//交换位置")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let tmp = arr[j];")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//arr[j] = arr[j+1];")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//arr[j+1] = tmp;")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"复杂度分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析","aria-hidden":"true"}},[t._v("#")]),t._v(" 复杂度分析")]),t._v(" "),n("ul",[n("li",[t._v("时间复杂度：O(n²)")])]),t._v(" "),n("p",[t._v("长度为n的数组，最外层for要进行n-1趟循环，每趟要进行n-i-1次执行，")]),t._v(" "),n("p",[t._v("即：第0趟执行 n-1次，第1趟执行n-2次 ...... 最后一趟执行1次，执行次数相加，")]),t._v(" "),n("p",[t._v("即：(n-1)+(n-2)+......+1 = n * (n - 1) / 2")]),t._v(" "),n("p",[t._v("O(n²)表示的是复杂度的数量级，其它系数可以忽略。")]),t._v(" "),n("ul",[n("li",[t._v("空间复杂度：O(1)")])]),t._v(" "),n("p",[t._v("算法所需空间资源没有随程序执行次数增加而增大。")]),t._v(" "),n("h3",{attrs:{id:"是一种稳定排序算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#是一种稳定排序算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 是一种稳定排序算法")]),t._v(" "),n("ul",[n("li",[t._v("排序算法的稳定性：通俗地讲就是能保证排序前两个相等的数据其在序列中的先后位置顺序与排序后它们两个先后位置顺序相同。")])]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("ol",[n("li",[t._v("冒泡排序的算法时间平均复杂度为O(n²)。")]),t._v(" "),n("li",[t._v("空间复杂度为 O(1)。")]),t._v(" "),n("li",[t._v("冒泡排序为稳定排序。")])])])}],r=s(1),e=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);a.default=e.exports}}]);